@using Pastures2019.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Charts"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/lib/сhart.js/dist/Chart.css" rel="stylesheet" />
<script src="~/lib/сhart.js/dist/Chart.js"></script>

<input id="objectid" type="hidden" value="@ViewBag.objectid" />

<select id="sourceproduct1">
    <option value="MOLT_MOD13Q1006">Terra MODIS 16-day</option>
    <option value="MOLA_MYD13Q1006">Aqua MODIS 16-day</option>
</select>
<select id="dataset1">
    <option value="NDVI">NDVI</option>
    <option value="Anomaly">@SharedLocalizer["Anomaly"]</option>
</select>
<select id="yearstart1">
    @for (int y = 2000; y <= DateTime.Today.Year; y++)
    {
        if (y == DateTime.Today.Year)
        {
            <option value="@y" selected>@y.ToString()</option>
        }
        else
        {
            <option value="@y">@y.ToString()</option>
        }
    }
</select>
<select id="yearfinish1">
    @for (int y = 2000; y <= DateTime.Today.Year; y++)
    {
        if (y == DateTime.Today.Year)
        {
            <option value="@y" selected>@y.ToString()</option>
        }
        else
        {
            <option value="@y">@y.ToString()</option>
        }
    }
</select>
<input type="button" onclick="Chart1()" value="@SharedLocalizer["Refresh"]" />
<canvas class="my-1 w-100 chartjs-render-monitor" id="chart1Canvas" width="900" height="380"></canvas>
<br />
<br />

<select id="sourceproduct2">
    <option value="MOLT_MOD13Q1006">Terra MODIS 16-day</option>
    <option value="MOLA_MYD13Q1006">Aqua MODIS 16-day</option>
</select>
<select id="dataset2">
    <option value="NDVI">NDVI</option>
    <option value="Anomaly">@SharedLocalizer["Anomaly"]</option>
</select>
<select id="monthstart2">
    <option value="1" selected>1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
    <option value="7">7</option>
    <option value="8">8</option>
    <option value="9">9</option>
    <option value="10">10</option>
    <option value="11">11</option>
    <option value="12">12</option>
</select>
<select id="monthscount2">
    <option value="1">1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
    <option value="7">7</option>
    <option value="8">8</option>
    <option value="9">9</option>
    <option value="10">10</option>
    <option value="11">11</option>
    <option value="12" selected>12</option>
</select>
@for (int y = 2000; y <= DateTime.Today.Year; y++)
{
    string checkboxid = "year" + y.ToString();
    if (y != DateTime.Today.Year)
    {
        <input type="checkbox" id="@checkboxid" name="chart2years" value="@y.ToString()">
    }
    else
    {
        <input type="checkbox" id="@checkboxid" name="chart2years" value="@y.ToString()" checked>
    }
    <label for="@checkboxid">@y.ToString()</label>
}
<input type="button" onclick="Chart2()" value="@SharedLocalizer["Refresh"]" />
<canvas class="my-1 w-100 chartjs-render-monitor" id="chart2Canvas" width="900" height="380"></canvas>

<script>
    var chart1 = null;
    function Chart1() {
        $.ajax({
            url: '@Url.Action("GetChart1Data")',
            data: {
                objectid: $('#objectid').val(),
                sourceproduct: $('#sourceproduct1').val(),
                dataset: $('#dataset1').val(),
                yearstart: $('#yearstart1').val(),
                yearfinish: $('#yearfinish1').val()
            },
            type: 'POST',
            success: function (data) {
                var color_min = random_rgba(),
                    color_max = random_rgba(),
                    color_median = random_rgba();
                var chart1Data = {
                    labels: data.labels,
                    datasets: [
                        {
                            label: '@Html.Raw(SharedLocalizer["minimum"])',
                            backgroundColor: color_min,
                            borderColor: 'rgba(215, 215, 215, 1)',
                            borderWidth: 1,
                            data: data.years_min
                        },
                        {
                            label: '@Html.Raw(SharedLocalizer["maximum"])',
                            backgroundColor: color_max,
                            borderColor: 'rgba(215, 215, 215, 1)',
                            borderWidth: 1,
                            data: data.years_max
                        },
                        {
                            label: '@Html.Raw(SharedLocalizer["median"])',
                            backgroundColor: color_median,
                            borderColor: 'rgba(215, 215, 215, 1)',
                            borderWidth: 1,
                            data: data.years_median
                        }]
                };
                var ctx1 = document.getElementById('chart1Canvas').getContext('2d');
                if (chart1 != null) {
                    chart1.destroy();
                }
                chart1 = new Chart(ctx1, {
                    type: 'bar',
                    data: chart1Data,
                    options: {
                        responsive: true,
                        scales: {
                            xAxes: [{
                                stacked: true,
                            }],
                            yAxes: [{
                                stacked: true
                            }]
                        },
                        title: {
                            display: true,
                            text: '@Html.Raw(SharedLocalizer["AllocationNumber"]): @ViewBag.group_id' + ', ' +  $('#sourceproduct1 option:selected').text() + ', ' + $('#dataset1 option:selected').text()
                        }
                    }
                });
            },
            error: function () {
                console.log('Error chart 1');
            }
        });
    }

    var chart2 = null;
    function Chart2() {
        var chart2years = [];
        $("input:checkbox[name=chart2years]:checked").each(function(){
            chart2years.push($(this).val());
        });
        $.ajax({
            url: '@Url.Action("GetChart2Data")',
            data: {
                objectid: $('#objectid').val(),
                sourceproduct: $('#sourceproduct2').val(),
                dataset: $('#dataset2').val(),
                monthstart: $('#monthstart2').val(),
                monthscount: $('#monthscount2').val(),
                years: chart2years
            },
            type: 'POST',
            success: function (data) {
                var chart2Data = {
                    labels: data.labels,
                    datasets: [
                        {
                            label: '@Html.Raw(SharedLocalizer["minimum"])',
                            backgroundColor: 'rgba(195, 195, 195, 1)',
                            borderColor: 'rgba(215, 215, 215, 1)',
                            data: data.years_min,
                            fill: false
                        },
                        {
                            label: '@Html.Raw(SharedLocalizer["maximum"])',
                            backgroundColor: 'rgba(195, 195, 195, 1)',
                            borderColor: 'rgba(215, 215, 215, 1)',
                            data: data.years_max,
                            fill: false
                        },
                        {
                            label: '@Html.Raw(SharedLocalizer["median"])',
                            backgroundColor: 'rgba(0, 128, 128, 1)',
                            borderColor: 'rgba(20, 148, 148, 1)',
                            data: data.years_median,
                            fill: false
                        }]
                };
                for (var i = 0; i < data.year_min_datasets.length; ++i) {
                    var color = random_rgba();
                    chart2Data.datasets.push({
                        label: data.year_min_datasets[i].year + ' @Html.Raw(SharedLocalizer["minimum"])',
                        backgroundColor: color,
                        borderColor: color,
                        data: data.year_min_datasets[i].data,
                        fill: false
                    });
                }
                for (var i = 0; i < data.year_max_datasets.length; ++i) {
                    var color = random_rgba();
                    chart2Data.datasets.push({
                        label: data.year_max_datasets[i].year + ' @Html.Raw(SharedLocalizer["maximum"])',
                        backgroundColor: color,
                        borderColor: color,
                        data: data.year_max_datasets[i].data,
                        fill: false
                    });
                }
                for (var i = 0; i < data.year_median_datasets.length; ++i) {
                    var color = random_rgba();
                    chart2Data.datasets.push({
                        label: data.year_median_datasets[i].year + ' @Html.Raw(SharedLocalizer["median"])',
                        backgroundColor: color,
                        borderColor: color,
                        data: data.year_median_datasets[i].data,
                        fill: false
                    });
                }
                var ctx2 = document.getElementById('chart2Canvas').getContext('2d');
                if (chart2 != null) {
                    chart2.destroy();
                }
                chart2 = new Chart(ctx2, {
                    type: 'line',
                    data: chart2Data,
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: '@Html.Raw(SharedLocalizer["AllocationNumber"]): @ViewBag.group_id' + ', ' +  $('#sourceproduct2 option:selected').text() + ', ' + $('#dataset2 option:selected').text()
                        }
                    }
                });
            },
            error: function () {
                console.log('Error chart 2');
            }
        });
    }

    function random_rgba() {
        var o = Math.round, r = Math.random, s = 255;
        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
    }
</script>

<script>
    $(document).ready(function () {
        Chart1();
        Chart2();
    });
</script>