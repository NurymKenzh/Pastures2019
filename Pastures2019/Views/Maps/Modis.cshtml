@using Pastures2019.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = "MODIS";
    Layout = "~/Views/Shared/_LayoutMap.cshtml";
}
<link href="~/lib/ol/ol.css" rel="stylesheet" />
<link rel="stylesheet" href="~/lib/vendor/font-awesome/css/font-awesome.min.css" />
<script src="~/lib/ol/ol.js"></script>
<link href="~/lib/vendor/jBox/dist/jBox.all.css" rel="stylesheet" />
<script src="~/lib/vendor/jBox/dist/jBox.all.js"></script>
@{
    YearDay[] yearDays_MOLT_MOD13Q1006 = ViewBag.YearDays_MOLT_MOD13Q1006;
    string maxYear_MOLT_MOD13Q1006 = yearDays_MOLT_MOD13Q1006.Max(y => y.year),
        maxDay_MOLT_MOD13Q1006 = yearDays_MOLT_MOD13Q1006.Where(y => y.year == maxYear_MOLT_MOD13Q1006).Max(y => y.day);

    YearDay[] yearDays_MOLA_MYD13Q1006 = ViewBag.YearDays_MOLA_MYD13Q1006;
    string maxYear_MOLA_MYD13Q1006 = yearDays_MOLA_MYD13Q1006.Max(y => y.year),
        maxDay_MOLA_MYD13Q1006 = yearDays_MOLA_MYD13Q1006.Where(y => y.year == maxYear_MOLA_MYD13Q1006).Max(y => y.day);
}
<div class="container-fluid sticky-top p-0">
    <!-- Sidebar -->
    <nav class="sidebar border border-light">
        <div class="page-wrapper chiller-theme">
            <!-- close sidebar menu -->
            <div class="dismiss">
                <i class="fa fa-arrow-left"></i>
            </div>
            <div class="logo">
                <h3>Pasture</h3>
            </div>
            <div class="col mt-1">
                <form>
                    <label class="m-0" for="SourceProduct">@SharedLocalizer["Satellite"]</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="SourceProduct" onchange="ChangeSourceProduct()">
                            <option value="MOLT_MOD13Q1006">Terra MODIS 16-day</option>
                            <option value="MOLA_MYD13Q1006">Aqua MODIS 16-day</option>
                        </select>
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <input type="checkbox" id="layerMODISShow" checked="checked" onchange="ChangeLayers()">
                            </div>
                        </div>
                    </div>
                    <input id="layerMODISOpacity" type="range" class="form-control-range" min="0" max="100" value="80" oninput="ChangeLayers()" />
                    <div class="form-group mb-0">
                        <label class="m-0" for="DataSet">@SharedLocalizer["Dataset"]</label>
                        <select class="form-control form-control-sm" id="DataSet" onchange="ChangeDataSet()">
                            <option value="NDVI">NDVI</option>
                            <option value="Anomaly">@SharedLocalizer["Anomaly"]</option>
                        </select>
                    </div>
                    <!-- Year for Terra -->
                    <div class="form-group mt-1 mb-1 MOLT_MOD13Q1006">
                        <label class="m-0" for="Year_MOLT_MOD13Q1006">@SharedLocalizer["Year"]</label>
                        <select class="form-control form-control-sm" id="Year_MOLT_MOD13Q1006" onchange="ChangeYear()">
                            @foreach (string year in yearDays_MOLT_MOD13Q1006.Select(y => y.year).Distinct().OrderBy(y => y))
                            {
                                if (year == maxYear_MOLT_MOD13Q1006)
                                {
                                    <option value="@year" selected>@year</option>
                                }
                                else
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>
                    </div>
                    <!-- Year for Aqua -->
                    <div class="form-group mt-1 mb-1 MOLA_MYD13Q1006" style="display: none;">
                        <label class="m-0" for="Year_MOLA_MYD13Q1006">@SharedLocalizer["Year"]</label>
                        <select class="form-control form-control-sm" id="Year_MOLA_MYD13Q1006" onchange="ChangeYear()">
                            @foreach (string year in yearDays_MOLA_MYD13Q1006.Select(y => y.year).Distinct().OrderBy(y => y))
                            {
                                if (year == maxYear_MOLA_MYD13Q1006)
                                {
                                    <option value="@year" selected>@year</option>
                                }
                                else
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>
                    </div>
                    <label class="m-0" for="DayOfYear_MOD13Q1006">@SharedLocalizer["Date"]</label>
                    <!-- Day for Terra -->
                    <div class="input-group input-group-sm MOLT_MOD13Q1006">
                        <div class="input-group-prepend">
                            <input class="input-group-text" type="button" value="-" onclick="DateMinusMOLT_MOD13Q1006()" />
                        </div>
                        <select class="custom-select" id="DayOfYear_MOLT_MOD13Q1006" aria-describedby="DayHelpBlock" onchange="ChangeModis()">
                            @foreach (YearDay day in yearDays_MOLT_MOD13Q1006.Where(y => y.year == maxYear_MOLT_MOD13Q1006).Distinct().OrderBy(y => y.day))
                            {
                                if (day.day == maxDay_MOLT_MOD13Q1006)
                                {
                                    <option value="@day.day" selected>@day.monthday</option>
                                }
                                else
                                {
                                    <option value="@day.day">@day.monthday</option>
                                }
                            }
                        </select>
                        <div class="input-group-append">
                            <input class="input-group-text" type="button" value="+" onclick="DatePlusMOLT_MOD13Q1006()" />
                        </div>
                    </div>
                    <!-- Day for Aqua -->
                    <div class="input-group input-group-sm MOLA_MYD13Q1006" style="display: none;">
                        <div class="input-group-prepend">
                            <input class="input-group-text" type="button" value="-" onclick="DateMinusMOLA_MYD13Q1006()" />
                        </div>
                        <select class="custom-select" id="DayOfYear_MOLA_MYD13Q1006" onchange="ChangeModis()">
                            @foreach (YearDay day in yearDays_MOLA_MYD13Q1006.Where(y => y.year == maxYear_MOLA_MYD13Q1006).Distinct().OrderBy(y => y.day))
                            {
                                if (day.day == maxDay_MOLA_MYD13Q1006)
                                {
                                    <option value="@day.day" selected>@day.monthday</option>
                                }
                                else
                                {
                                    <option value="@day.day">@day.monthday</option>
                                }
                            }
                        </select>
                        <div class="input-group-append">
                            <input class="input-group-text" type="button" value="+" onclick="DatePlusMOLA_MYD13Q1006()" />
                        </div>
                    </div>
                    <small id="DayHelpBlock" class="form-text text-black-50">
                        Exsample 017 : 01/17 - 01/24
                    </small>
                </form>
            </div>
            <!-- Other sections -->
            <ul class="list-unstyled menu-elements">
                <li>
                    <a href="#BaseLayerSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="BaseLayerSections">
                        <i class="fa fa-refresh"></i>Other sections
                    </a>
                    <ul class="collapse list-unstyled" id="BaseLayerSections">
                        <li>
                            <div class="treeextent scrollbar-deep-purple bordered-deep-purple thin">
                                <div class="col">
                                    <label class="form-check-label" for="layerBaseShow">
                                        @SharedLocalizer["BaseLayer"]
                                    </label>
                                    <div class="input-group input-group-sm">
                                        <select class="custom-select" id="layerBaseType" onchange="ChangeLayers()">
                                            <option value="OSM">OpenStreetMap</option>
                                            <option value="BingAerialWithLabels">Bing Aerial</option>
                                            <option value="BingRoadStatic">Bing Road (static)</option>
                                            <option value="BingRoadDynamic">Bing Road (dynamic)</option>
                                            <option value="HERENormalDay">HERE Normal Day</option>
                                            <option value="HERENormalDayTransit">HERE Normal Day Transit</option>
                                            <option value="HERETerrainDay">HERE Terrain Day</option>
                                            <option value="HEREHybridDay" selected>HERE Hybrid Day</option>
                                            <option value="StamenWatercolor">Stamen Watercolor</option>
                                            <option value="StamenTerrain">Stamen Terrain</option>
                                            <option value="StamenToner">Stamen Toner</option>
                                            <option value="ArcGIS">ArcGIS</option>
                                            <option value="ThunderforestOpenCycleMap">Thunderforest OpenCycleMap</option>
                                            <option value="ThunderforestTransport">Thunderforest Transport</option>
                                            <option value="ThunderforestLandscape">Thunderforest Landscape</option>
                                            <option value="ThunderforestOutdoors">Thunderforest Outdoors</option>
                                            <option value="ThunderforestSpinalMap">Thunderforest Spinal Map</option>
                                            <option value="ThunderforestPioneer">Thunderforest Pioneer</option>
                                            <option value="ThunderforestMobileAtlas">Thunderforest Mobile Atlas</option>
                                            <option value="ThunderforestNeighbourhood">Thunderforest Neighbourhood</option>
                                        </select>
                                        <div class="input-group-append">
                                            <div class="input-group-text">
                                                <input type="checkbox" id="layerBaseShow" checked="checked" onchange="ChangeLayers()">
                                            </div>
                                        </div>
                                    </div>
                                    <input id="layerBaseOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                                </div>
                                
                            </div>
                            
                        </li>
                    </ul>
                </li>
            </ul>
            <!-- Exaple 1 -->
            <div class="dark-light-buttons">
                <a class="btn btn-primary btn-customized-4 btn-customized-dark" href="#" role="button">Dark</a>
                <a class="btn btn-primary btn-customized-4 btn-customized-light" href="#" role="button">Light</a>
            </div>
            <div class="sidebar-footer">
                <a href="#">
                    <i class="SomeInfo fa fa-file" InfoTitle="Tooltip on top"></i>
                </a>
                <a href="#" OnClick="Charts()" id="ChartsButton" value="Выделять" onclick="Charts()">
                    <i class="SomeInfo fa fa-bar-chart-o" InfoTitle="Для построение Графика, сначало выберите объект на карте (ВХБ или БХУ)"></i>
                    <span id="chartSpan" class="badge badge-pill badge-warning notification">0</span>
                </a>
                <a href="#" id="LegendBtn" class="target-click">
                    <i class="SomeInfo fa fa-list-alt" InfoTitle="Легенда"></i>
                </a>
                <a href="#" id="MapTitleBtn" class="target-click">
                    <i class="SomeInfo fa fa-bookmark" InfoTitle="Информация о слое"></i>
                </a>
            </div>
        </div>
    </nav>
    <!-- End sidebar -->
    <!-- Content -->
    <div class="content">
        <!-- open sidebar menu -->
        <a class="btn btn-light btn-customized open-menu" href="#" role="button">
            <i class="fa fa-align-left"></i> <span>@SharedLocalizer["Menu"]</span>
        </a>
        <!-- Map content -->
        <div id="map" class="position-fixed col-md-12 ml-sm-auto col-lg-12 p-0" style="height: calc(100% - 100px);"></div>
    </div>
    <!-- End content -->
</div>

@* layers *@
<script>
    var geoserver_url = '@ViewBag.GeoServerUrl', //'http://89.250.84.186:8080/geoserver/',
        geoserver_workspace_name = '@ViewBag.ModisWorkspace', //'MODIS',
        layerModisTemplate1 = '@ViewBag.ModisLayerTemplate1', //'A',
        layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI = '@ViewBag.ModisLayerTemplate_MOLT_MOD13Q1006_B01_NDVI',
        layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI_Anomaly = '@ViewBag.ModisLayerTemplate_MOLT_MOD13Q1006_B01_NDVI_Anomaly',
        layerModisTemplate_MOLA_MYD13Q1006_B01_NDVI = '@ViewBag.ModisLayerTemplate_MOLA_MYD13Q1006_B01_NDVI',
        layerModisTemplate_MOLA_MYD13Q1006_B01_NDVI_Anomaly = '@ViewBag.ModisLayerTemplate_MOLA_MYD13Q1006_B01_NDVI_Anomaly';
    var layerNDVI = layerModisTemplate1 + $('#Year_MOLT_MOD13Q1006').val() + $('#DayOfYear_MOLT_MOD13Q1006').val() + layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI,
        layerAnomaly = layerModisTemplate1 + $('#Year_MOLT_MOD13Q1006').val() + $('#DayOfYear_MOLT_MOD13Q1006').val() + layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI_Anomaly;

    var HEREappId = 'SLdBasp4s1oq2oUbVGxy';
    var HEREappCode = 'D9-h9iVhjgUB_9eUlFETXA';

    var Source_OSM = new ol.source.OSM();

    Source_BingAerialWithLabels = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'AerialWithLabels',
    });

    Source_BingRoadStatic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'Road',
    });
    Source_BingRoadDynamic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'RoadOnDemand',
    });

    var urlTpl = 'https://{1-4}.{base}.maps.cit.api.here.com' +
        '/{type}/2.1/maptile/newest/{scheme}/{z}/{x}/{y}/256/png' +
        '?app_id={app_id}&app_code={app_code}';
    function HEREcreateUrl(tpl, HERElayerDesc) {
        return tpl
            .replace('{base}', HERElayerDesc.base)
            .replace('{type}', HERElayerDesc.type)
            .replace('{scheme}', HERElayerDesc.scheme)
            .replace('{app_id}', HERElayerDesc.app_id)
            .replace('{app_code}', HERElayerDesc.app_code);
    };

    var HERElayerDescNormalDay = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescNormalDayTransit = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day.transit',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDayTransit = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDayTransit),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescTerrainDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'terrain.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERETerrainDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescTerrainDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescHybridDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'hybrid.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HEREHybridDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescHybridDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' + '<a href="http://developer.here.com">HERE</a>'
    });

    var Source_StamenWatercolor = new ol.source.Stamen({
        layer: 'watercolor'
    });

    var Source_StamenTerrain = new ol.source.Stamen({
        layer: 'terrain'
    });

    var Source_StamenToner = new ol.source.Stamen({
        layer: 'toner'
    });

    var Source_ArcGIS = new ol.source.XYZ({
        attributions: 'Tiles © <a href="https://services.arcgisonline.com/ArcGIS/' +
            'rest/services/World_Topo_Map/MapServer">ArcGIS</a>',
        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +
            'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
    });

    var Source_ThunderforestOpenCycleMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransport = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestLandscape = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestOutdoors = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransportDark = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestSpinalMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestPioneer = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestMobileAtlas = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestNeighbourhood = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Layer_Base = new ol.layer.Tile({
        source: Source_HEREHybridDay
    });
    Layer_Base.set('name', 'Base');
    Layer_Base.setOpacity(1);

    var url_NDVI = geoserver_url + geoserver_workspace_name + '/wms';
    var Source_NDVI = new ol.source.TileWMS({
        url: url_NDVI,
        params: {
            'FORMAT': 'image/png',
            'VERSION': '1.1.1',
            tiled: true,
            'LAYERS': geoserver_workspace_name + ':' + layerNDVI
        },
        serverType: 'geoserver'
    });
    var Layer_NDVI = new ol.layer.Tile({
        source: Source_NDVI
    });
    Layer_NDVI.set('name', 'NDVI');
    Layer_NDVI.setOpacity(0.80);

    var url_Anomaly = geoserver_url + geoserver_workspace_name + '/wms';
    var Source_Anomaly = new ol.source.TileWMS({
        url: url_Anomaly,
        params: {
            'FORMAT': 'image/png',
            'VERSION': '1.1.1',
            tiled: true,
            'LAYERS': geoserver_workspace_name + ':' + layerAnomaly
        },
        serverType: 'geoserver'
    });
    var Layer_Anomaly = new ol.layer.Tile({
        source: Source_Anomaly
    });
    Layer_Anomaly.set('name', 'Anomaly');
    Layer_Anomaly.setVisible(false);
    Layer_Anomaly.setOpacity(0.80);
</script>

@* map *@
<script>
    var map = new ol.Map({
        target: 'map',
        controls: new ol.control.defaults({ attributionOptions: { collapsible: true } }).extend([
            new ol.control.ScaleLine()
        ]),
        layers: [
            Layer_Base,
            Layer_NDVI,
            Layer_Anomaly
        ],
        view: new ol.View({
            center: ol.proj.fromLonLat([66.902, 48.714]),
            zoom: 5,
            minZoom: 5,
            extent: [5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296]
        })
    });
</script>

<script>
    function ChangeSourceProduct() {
        if ($('#SourceProduct').val() == 'MOLT_MOD13Q1006') {
            $('.MOLT_MOD13Q1006').show();
            $('.MOLA_MYD13Q1006').hide();
        }
        else if ($('#SourceProduct').val() == 'MOLA_MYD13Q1006') {
            $('.MOLA_MYD13Q1006').show();
            $('.MOLT_MOD13Q1006').hide();
        }
        ChangeModis();
    }

    function ChangeDataSet() {
        if ($('#DataSet').val() == 'NDVI') {
            Layer_NDVI.setVisible(true);
            Layer_Anomaly.setVisible(false);
        }
        else if ($('#DataSet').val() == 'Anomaly') {
            Layer_NDVI.setVisible(false);
            Layer_Anomaly.setVisible(true);
        }
    }

    function ChangeYear() {
        // MOLT_MOD13Q1006
        $('#DayOfYear_MOLT_MOD13Q1006').html('');
        var maxday_MOLT_MOD13Q1006 = '001';
        for (i = 0; i < yeardays_MOLT_MOD13Q1006.length; i++) {
            if (yeardays_MOLT_MOD13Q1006[i].year == $('#Year_MOLT_MOD13Q1006').val().toString()) {
                if (parseInt(yeardays_MOLT_MOD13Q1006[i].day) > parseInt(maxday_MOLT_MOD13Q1006)) {
                    maxday_MOLT_MOD13Q1006 = yeardays_MOLT_MOD13Q1006[i].day;
                }
            }
        }
        for (i = 0; i < yeardays_MOLT_MOD13Q1006.length; i++) {
            if (yeardays_MOLT_MOD13Q1006[i].year == $('#Year_MOLT_MOD13Q1006').val().toString()) {
                if (yeardays_MOLT_MOD13Q1006[i].day == maxday_MOLT_MOD13Q1006) {
                    $('#DayOfYear_MOLT_MOD13Q1006').append($('<option selected />').val(yeardays_MOLT_MOD13Q1006[i].day).text(yeardays_MOLT_MOD13Q1006[i].monthday));
                }
                else {
                    $('#DayOfYear_MOLT_MOD13Q1006').append($('<option />').val(yeardays_MOLT_MOD13Q1006[i].day).text(yeardays_MOLT_MOD13Q1006[i].monthday));
                }
            }
        }

        // MOLA_MYD13Q1006
        $('#DayOfYear_MOLA_MYD13Q1006').html('');
        var maxday_MOLA_MYD13Q1006 = '001';
        for (i = 0; i < yeardays_MOLA_MYD13Q1006.length; i++) {
            if (yeardays_MOLA_MYD13Q1006[i].year == $('#Year_MOLA_MYD13Q1006').val().toString()) {
                if (parseInt(yeardays_MOLA_MYD13Q1006[i].day) > parseInt(maxday_MOLA_MYD13Q1006)) {
                    maxday_MOLA_MYD13Q1006 = yeardays_MOLA_MYD13Q1006[i].day;
                }
            }
        }
        for (i = 0; i < yeardays_MOLA_MYD13Q1006.length; i++) {
            if (yeardays_MOLA_MYD13Q1006[i].year == $('#Year_MOLA_MYD13Q1006').val().toString()) {
                if (yeardays_MOLA_MYD13Q1006[i].day == maxday_MOLA_MYD13Q1006) {
                    $('#DayOfYear_MOLA_MYD13Q1006').append($('<option selected />').val(yeardays_MOLA_MYD13Q1006[i].day).text(yeardays_MOLA_MYD13Q1006[i].monthday));
                }
                else {
                    $('#DayOfYear_MOLA_MYD13Q1006').append($('<option />').val(yeardays_MOLA_MYD13Q1006[i].day).text(yeardays_MOLA_MYD13Q1006[i].monthday));
                }
            }
        }
        ChangeModis();
    }

    function ChangeModis() {
        if ($('#SourceProduct').val() == 'MOLT_MOD13Q1006') {
            layerNDVI = layerModisTemplate1 + $('#Year_MOLT_MOD13Q1006').val() + $('#DayOfYear_MOLT_MOD13Q1006').val() + layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI;
            Source_NDVI = new ol.source.TileWMS({
                url: geoserver_url + geoserver_workspace_name + '/wms',
                params: {
                    'FORMAT': 'image/png',
                    'VERSION': '1.1.1',
                    tiled: true,
                    'LAYERS': geoserver_workspace_name + ':' + layerNDVI
                },
                serverType: 'geoserver'
            });
            Layer_NDVI.setSource(Source_NDVI);

            layerAnomaly = layerModisTemplate1 + $('#Year_MOLT_MOD13Q1006').val() + $('#DayOfYear_MOLT_MOD13Q1006').val() + layerModisTemplate_MOLT_MOD13Q1006_B01_NDVI_Anomaly;
            Source_Anomaly = new ol.source.TileWMS({
                url: geoserver_url + geoserver_workspace_name + '/wms',
                params: {
                    'FORMAT': 'image/png',
                    'VERSION': '1.1.1',
                    tiled: true,
                    'LAYERS': geoserver_workspace_name + ':' + layerAnomaly
                },
                serverType: 'geoserver'
            });
            Layer_Anomaly.setSource(Source_Anomaly);
        }
        if ($('#SourceProduct').val() == 'MOLA_MYD13Q1006') {
            layerNDVI = layerModisTemplate1 + $('#Year_MOLA_MYD13Q1006').val() + $('#DayOfYear_MOLA_MYD13Q1006').val() + layerModisTemplate_MOLA_MYD13Q1006_B01_NDVI;
            Source_NDVI = new ol.source.TileWMS({
                url: geoserver_url + geoserver_workspace_name + '/wms',
                params: {
                    'FORMAT': 'image/png',
                    'VERSION': '1.1.1',
                    tiled: true,
                    'LAYERS': geoserver_workspace_name + ':' + layerNDVI
                },
                serverType: 'geoserver'
            });
            Layer_NDVI.setSource(Source_NDVI);

            layerAnomaly = layerModisTemplate1 + $('#Year_MOLA_MYD13Q1006').val() + $('#DayOfYear_MOLA_MYD13Q1006').val() + layerModisTemplate_MOLA_MYD13Q1006_B01_NDVI_Anomaly;
            Source_Anomaly = new ol.source.TileWMS({
                url: geoserver_url + geoserver_workspace_name + '/wms',
                params: {
                    'FORMAT': 'image/png',
                    'VERSION': '1.1.1',
                    tiled: true,
                    'LAYERS': geoserver_workspace_name + ':' + layerAnomaly
                },
                serverType: 'geoserver'
            });
            Layer_Anomaly.setSource(Source_Anomaly);
        }
    }
</script>

@* DateMinusMOLT_MOD13Q1006 *@
<script>
    function DateMinusMOLT_MOD13Q1006() {
        if ($("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex') > 0) {
            $("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex', $("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex') - 1);
            ChangeModis();
        }
        else if ($("#Year_MOLT_MOD13Q1006").prop('selectedIndex') > 0) {
            $("#Year_MOLT_MOD13Q1006").prop('selectedIndex', $("#Year_MOLT_MOD13Q1006").prop('selectedIndex') - 1);
            ChangeYear();
        }
    }

    function DatePlusMOLT_MOD13Q1006() {
        if ($("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex') < $('#DayOfYear_MOLT_MOD13Q1006 option').length - 1) {
            $("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex', $("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex') + 1);
            ChangeModis();
        }
        else if ($("#Year_MOLT_MOD13Q1006").prop('selectedIndex') < $('#Year_MOLT_MOD13Q1006 option').length - 1) {
            $("#Year_MOLT_MOD13Q1006").prop('selectedIndex', $("#Year_MOLT_MOD13Q1006").prop('selectedIndex') + 1);
            ChangeYear();
            $("#DayOfYear_MOLT_MOD13Q1006").prop('selectedIndex', 0);
            ChangeModis();
        }
    }

    function DateMinusMOLA_MYD13Q1006() {
        if ($("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex') > 0) {
            $("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex', $("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex') - 1);
            ChangeModis();
        }
        else if ($("#Year_MOLA_MYD13Q1006").prop('selectedIndex') > 0) {
            $("#Year_MOLA_MYD13Q1006").prop('selectedIndex', $("#Year_MOLA_MYD13Q1006").prop('selectedIndex') - 1);
            ChangeYear();
        }
    }

    function DatePlusMOLA_MYD13Q1006() {
        if ($("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex') < $('#DayOfYear_MOLA_MYD13Q1006 option').length - 1) {
            $("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex', $("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex') + 1);
            ChangeModis();
        }
        else if ($("#Year_MOLA_MYD13Q1006").prop('selectedIndex') < $('#Year_MOLA_MYD13Q1006 option').length - 1) {
            $("#Year_MOLA_MYD13Q1006").prop('selectedIndex', $("#Year_MOLA_MYD13Q1006").prop('selectedIndex') + 1);
            ChangeYear();
            $("#DayOfYear_MOLA_MYD13Q1006").prop('selectedIndex', 0);
            ChangeModis();
        }
    }
</script>

@* ChangeLayers *@
<script>
    function ChangeLayers() {
        map.getLayers().forEach(function (layer) {
            if (layer.get('name') == 'Base') {
                layer.setVisible(document.getElementById("layerBaseShow").checked);
                layer.setOpacity($('#layerBaseOpacity').val() / 100)
                if ($('#layerBaseType').val() == 'OSM') {
                    layer.setSource(Source_OSM);
                }
                else if ($('#layerBaseType').val() == 'BingAerialWithLabels') {
                    layer.setSource(Source_BingAerialWithLabels);
                }
                else if ($('#layerBaseType').val() == 'BingRoadStatic') {
                    layer.setSource(Source_BingRoadStatic);
                }
                else if ($('#layerBaseType').val() == 'BingRoadDynamic') {
                    layer.setSource(Source_BingRoadDynamic);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDay') {
                    layer.setSource(Source_HERENormalDay);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDayTransit') {
                    layer.setSource(Source_HERENormalDayTransit);
                }
                else if ($('#layerBaseType').val() == 'HERETerrainDay') {
                    layer.setSource(Source_HERETerrainDay);
                }
                else if ($('#layerBaseType').val() == 'HEREHybridDay') {
                    layer.setSource(Source_HEREHybridDay);
                }
                else if ($('#layerBaseType').val() == 'StamenWatercolor') {
                    layer.setSource(Source_StamenWatercolor);
                }
                else if ($('#layerBaseType').val() == 'StamenTerrain') {
                    layer.setSource(Source_StamenTerrain);
                }
                else if ($('#layerBaseType').val() == 'StamenToner') {
                    layer.setSource(Source_StamenToner);
                }
                else if ($('#layerBaseType').val() == 'ArcGIS') {
                    layer.setSource(Source_ArcGIS);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOpenCycleMap') {
                    layer.setSource(Source_ThunderforestOpenCycleMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransport') {
                    layer.setSource(Source_ThunderforestTransport);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestLandscape') {
                    layer.setSource(Source_ThunderforestLandscape);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOutdoors') {
                    layer.setSource(Source_ThunderforestOutdoors);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransportDark') {
                    layer.setSource(Source_ThunderforestTransportDark);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestSpinalMap') {
                    layer.setSource(Source_ThunderforestSpinalMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestPioneer') {
                    layer.setSource(Source_ThunderforestPioneer);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestMobileAtlas') {
                    layer.setSource(Source_ThunderforestMobileAtlas);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestNeighbourhood') {
                    layer.setSource(Source_ThunderforestNeighbourhood);
                }
            }
            if (layer.get('name') == 'NDVI') {
                if ($('#DataSet').val() == 'NDVI') {
                    layer.setVisible(document.getElementById("layerMODISShow").checked);
                }
                layer.setOpacity($('#layerMODISOpacity').val() / 100);
            }
            if (layer.get('name') == 'Anomaly') {
                if ($('#DataSet').val() == 'Anomaly') {
                    layer.setVisible(document.getElementById("layerMODISShow").checked);
                }
                layer.setOpacity($('#layerMODISOpacity').val() / 100);
            }
        })
    }
</script>

<script>
    var yeardays_MOLT_MOD13Q1006 = [];
</script>
@foreach (YearDay yearDay in yearDays_MOLT_MOD13Q1006.OrderBy(y => y.year).ThenBy(y => y.day))
{
    <script>
        yeardays_MOLT_MOD13Q1006.push({
            year: '@yearDay.year',
            day: '@yearDay.day',
            monthday: '@yearDay.monthday'
        });
    </script>
}
<script>
    var yeardays_MOLA_MYD13Q1006 = [];
</script>
@foreach (YearDay yearDay in yearDays_MOLA_MYD13Q1006.OrderBy(y => y.year).ThenBy(y => y.day))
{
    <script>
        yeardays_MOLA_MYD13Q1006.push({
            year: '@yearDay.year',
            day: '@yearDay.day',
            monthday: '@yearDay.monthday'
        });
    </script>
}

@*Sidebar Menu*@
<script>
    jQuery(document).ready(function () {
        /*
            Sidebar
        */
        $('.dismiss, .overlay').on('click', function () {
            $('.sidebar').removeClass('active');
        });

        $('.open-menu').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('active');
            // close opened sub-menus
            $('.collapse.show').toggleClass('show');
            $('a[aria-expanded=true]').attr('aria-expanded', 'false');
        });
        /* change sidebar style */
        $('a.btn-customized-dark').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').removeClass('light');
        });
        $('a.btn-customized-light').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('light');
        });
    });
</script>

@*tooltips, modal windows*@
<script>
    $(document).ready(function () {

        // Map Title
        new jBox('Modal', {
            attach: '#MapTitleBtn',
            theme: 'TooltipBorder',
            width: 260,
            blockScroll: false,
            animation: 'flip',
            closeButton: false,
            position: {
                x: 'right',
                y: 'top'
            },
            offset: {
                x: -10,
                y: 70
            },
            content: (
                '<h5 class="Card-title text-center text-white">Map title</h5>' +
                '<p class="card-text text-center text-white">This content is a little bit longer.</p>'
            ),
            overlay: false,
            reposition: true,
            repositionOnOpen: false
        }).open();
        // Map Legend
        new jBox('Modal', {
            autoOpen: true,
            attach: '#LegendBtn',
            theme: 'TooltipBorder',
            width: 250,
            blockScroll: false,
            animation: 'flip',
            closeButton: true,
            position: {
                x: 'right',
                y: 'bottom'
            },
            offset: {
                x: -10,
                y: -90
            },
            content: '<div class="p-0"><img id="legend" class="card-img-top" src="/images/Legends/LegendNDVI.svg"></div>',
            overlay: false,
            reposition: true,
            repositionOnOpen: false
        }).open();
        // Tooltip below to the right
        new jBox('Tooltip', {
            theme: 'TooltipDark',
            attach: '.SomeInfo',
            getTitle: 'InfoTitle',
            closeOnMouseleave: true,
            pointer: 'center:-20',
            maxWidth: 400,
            minWidth: 100,
            adjustPosition: true,
            adjustTracker: true
        });
    });
</script>


